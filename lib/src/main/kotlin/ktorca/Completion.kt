/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package ktorca

import io.ktor.util.pipeline.*
import kotlinx.coroutines.channels.Channel
import kotlinx.coroutines.job

typealias CompletionHandler = suspend () -> Unit

suspend fun <TSubject : Any, TContext : Any> PipelineContext<TSubject, TContext>.completable(block: suspend (CompletionHandler) -> Unit) {

    // Presenterの処理が終了したかどうかを監視するチャネル
    val observer = Channel<Unit>(0)
    coroutineContext.job.invokeOnCompletion {
        observer.close(it)
    }

    block {
        observer.send(Unit)
        observer.close()
    }

    // Presenterの完了を待機
    observer.receive()
}
